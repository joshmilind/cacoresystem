<?xml version="1.0" encoding="UTF-8"?>
<project name="caCORESDKCustom">

	<target name="-build-artifacts.custom" if="build-artifacts.custom.use"/>
	<target name="-build-beans.custom" if="build-beans.custom.use"/>
	<target name="-build-framework.custom" if="build-framework.custom.use"/>
	<target name="-build-orm.custom" if="build-orm.custom.use"/>
	<target name="-build-schema.custom" if="build-schema.custom.use"/>
	<target name="-build-system.custom" if="build-system.custom.use"/>
	<target name="-clean.custom" if="clean.custom.use"/>
	<target name="-clean-all.custom" if="clean-all.custom.use"/>
	<target name="-clean-generator.custom" if="clean-framework.custom.use"/>
	<target name="-compile-beans.custom" if="compile-beans.custom.use"/>
	<target name="-compile-framework.custom" if="compile-framework.custom.use">
		<SDKecho message="Compiling application framework"/>
		<copy todir="${dir.output.project.framework.src}">
			<fileset dir="${dir.output.project.src}"/>
		</copy>
		<javac destdir="${dir.output.project.framework.build}">
			<src path="${dir.output.project.framework.src}"/>
			<!--src path="${dir.output.project.src}"/-->
			<classpath refid="classpath"/>
		</javac>
	</target>	
	<target name="-compile-generator.custom" if="compile-generator.custom.use"/>
	<target name="-compile-templates.custom" if="compile-templates.custom.use">
		<jetc template="${dir.output.project.templates}/BeanEVSImpl.javajet" destdir="${dir.output.project.src}"/>
		<jetc template="${dir.output.project.templates}/BeanEVSWS.javajet" destdir="${dir.output.project.src}"/>
		<javac srcdir="${dir.output.project.src}" destdir="${dir.output.project.build}">
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="-copy-custom-wsdd.custom" if="copy-custom-wsdd.custom.use" depends="-init-project.custom">
		<SDKecho message="inside of copy-customwsdd.custom."/>
				<copy todir="${dir.output.project.web-inf}" overwrite="yes" failonerror="false">
					<fileset dir="${dir.src.custom.wsdd}">
						<include name="${file.server.config.wsdd}"/>
					</fileset>
				</copy>
	</target>

	<target name="-copy-custom-beans.custom" if="copy-custom-beans.custom.use" depends="-init-project.custom">
	<SDKecho message="inside of copy-custombeans.custom."/>
			<copy todir="${dir.output.project.src}" overwrite="yes" failonerror="false">
				<fileset dir="${dir.src.custom.beans}">
					<include name="**/evs/domain/*.java"/>
				    <include name="**/evs/query/*.java"/>
				    <include name="**/evs/domain/ws/*.java"/>
				    <!--include name="**/evs/service/*.java"/>
					<include name="**/*.java"/-->
				</fileset>
			</copy>
	</target>
	<target name="-copy-custom-orm.custom" if="copy-custom-orm.custom.use" depends="-init-project.custom">
	<SDKecho message="inside of copy-custom-orm.custom."/>
		<copy todir="${dir.output.project.conf}" overwrite="yes" failonerror="false">
			<fileset dir="${dir.src.custom.orm}">
				<include name="${file.orm.properties}"/>
				<include name="${file.dao.configuration}"/>
				<include name="${file.orm.configuration}"/>
				<include name="${file.orm2.configuration}"/>
			</fileset>
		</copy>
	</target>
	<target name="-copy-project-framework.custom" if="copy-project-framework.custom.use" depends="-init-project.custom">
		<copy todir="${dir.output.project.framework.src}" overwrite="yes" failonerror="false">
			<fileset dir="${dir.custom.framework.src}">
				<include name="**/common/util/*.java"/>
				<include name="**/system/applicationservice/impl/*.java"/>
				<include name="**/system/applicationservice/*.java"/>
				<include name="**/comm/**/*.java"/>
				<include name="**/dao/**/*.java"/>
				<include name="**/delegator/*.java"/>
				<include name="**/dao/**/*.java"/>
				<include name="**/proxy/**/*.java"/>
				<include name="**/webservice/**/*.java"/>
				<include name="**/evs/service/*.java"/>
			</fileset>
		</copy>
	</target>
	<target name="-copy-server-file.custom" if="copy-server-file.custom.use"/>
	<target name="-copy-template-files.custom" if="copy-template-files.custom.use">
		<copy todir="${dir.output.project.templates}">
			<fileset dir="${dir.custom.conf}">
				<include name="*.javajet"/>
			</fileset>
			<fileset dir="${dir.custom.conf}">
				<include name="*.skeleton"/>
			</fileset>
		</copy>
	</target>
	<target name="-create-control-files.custom" if="create-control-files.custom.use">
		<SDKcreatecontrol outputdir="${dir.output.project.src}">
			<controlfileset>
				<fileset dir="${dir.custom.conf}">
					<include name="${file.control.beanevsgeneration}"/>
					<include name="${file.control.beanevswsgeneration}"/>
				</fileset>
			</controlfileset>
			<extendedfilterset>
		        <filter token="EVS_MODEL" value="${dir.custom.model}/${evs_model}"/>				
			</extendedfilterset>
		</SDKcreatecontrol>
	</target>
	<target name="-create-output-dirs.custom" if="create-output-dirs.custom.use"/>
	<target name="-create-project-dirs.custom" if="create-project-dirs.custom.use"/>
	<target name="-deploy-server.custom" if="deploy-server.custom.use"/>
	<target name="-deployWS.custom" if="deployWS.custom.use"/>
	<target name="-disable-writable-api.custom" if="disable-writable-api-yes,disable-writable-api.custom.use"/>
	<target name="-doc.custom" if="doc.custom.use"/>
	<target name="-doc-framework.custom" if="doc-framework.custom.use"/>
	<target name="-fix-xmi.custom" if="fix-xmi-yes,fix-xmi.custom.use"/>
	<target name="-format.custom" if="format.custom.use"/>
	<target name="-generate-artifacts.custom" if="generate-artifacts.custom.use"/>
	<target name="-generate-beans.custom" if="generate-beans.custom.use">
		<SDKgenerate controlfile="${dir.output.project.conf}/${file.control.beanevsgeneration}"/>
		<SDKgenerate controlfile="${dir.output.project.conf}/${file.control.beanevswsgeneration}"/>
	</target>
	<target name="-generate-cache.custom" if="generate-cache.custom.use"/>
	<target name="-generate-common-package-util.custom" if="generate-common-package-util.custom.use"/>
	<target name="-generate-common-role-util.custom" if="generate-common-role-util.custom.use"/>
	<target name="-generate-dao-conf.custom" if="generate-dao-conf.custom.use"/>
	<target name="-generate-junit.custom" if="generate-junit.custom.use"/>
	<target name="-generate-OR-mapping.custom" if="generate-OR-mapping.custom.use"/>
	<target name="-generate-orm-conf.custom" if="generate-orm-conf.custom.use"/>
	<target name="-generate-schemas.custom" if="generate-schemas.custom.use"/>
	<target name="-generate-wsdd.custom" if="generate-wsdd.custom.use"/>
	<target name="-generate-xml-mapping.custom" if="generate-xml-mapping.custom.use"/>
	<target name="-init-project.custom" if="init-project.custom.use">
	<SDKecho message="Inside of -init-project.custom"/>
		<copy todir="${dir.src.custom.wsdd}" overwrite="yes" failonerror="false">
			<fileset dir="${dir.custom.wsdd}">
					<include name="${file.server.config.wsdd}"/>
			</fileset>
		</copy>
		<copy todir="${dir.src.custom.beans}" overwrite="yes" failonerror="false">
			<fileset dir="${dir.custom.beans}">
					<include name="**/evs/domain/*.java"/>
					<include name="**/evs/query/*.java"/>
					<include name="**/evs/domain/ws/*.java"/>
					<include name="**/evs/service/*.java"/>
					<include name="**/*.java"/>
			</fileset>
		</copy>
		<copy todir="${dir.src.custom.framework}" overwrite="yes" failonerror="false">
			<fileset dir="${dir.custom.beans}">
					<include name="**/common/util/*.java"/>
					<include name="**/system/applicationservice/impl/*.java"/>
					<include name="**/system/applicationservice/*.java"/>
					<include name="**/comm/common/*.java"/>
					<include name="**/comm/server/*.java"/>
					<include name="**/dao/impl/externalsystem/*.java"/>
					<include name="**/dao/impl/orm/*.java"/>
				   	<include name="**/dao/*.java"/>
			</fileset>
		</copy>

		<copy todir="${dir.src.custom.orm}" overwrite="yes" failonerror="true">
			<fileset dir="${dir.custom.orm}"/>
		</copy>
		<copy todir="${dir.src.custom.beans}" overwrite="yes" failonerror="true">
			<fileset dir="${dir.custom.beans}">
				<include name="**/evs/domain/*.java" />
			</fileset>
		</copy>
		<copy todir="${dir.src.custom.orm}" overwrite="yes" failonerror="true">
			<fileset dir="${dir.custom.conf}">
				<include name="${file.orm.configuration}"/>
				<include name="${file.orm2.configuration}"/>
				<include name="${file.orm.properties}"/>
				<include name="${file.dao.configuration}"/>
			</fileset>
		</copy>
		<copy todir="${dir.output.project.conf}" overwrite="yes" failonerror="true">
			<fileset dir="${dir.custom.conf}">
				<include name="evsBeans.properties"/>
			</fileset>
			<fileset dir="${dir.custom.conf}/xslt">
				<include name="evsFormat.xsl"/>
				<include name="cacoreFormat.xsl"/>
			</fileset>
		</copy>
	</target>
	<target name="-package-client.custom" if="package-client.custom.use"/>
	<target name="-package-framework.custom" if="package-framework.custom.use" />
	<target name="-package-server.custom" if="package-server.custom.use" depends="-copy-custom-orm.custom">
	<SDKecho message="Inside of -package-server.custom"/>
		<delete file="${dir.output.project.package.server}/${file.project.server.war}"/>
		<war destfile="${dir.output.project.package.server}/${file.project.server.war}"
			webxml="${dir.custom.conf}/web.xml" update="yes" duplicate="preserve">
			<lib dir="${dir.lib}">
				<exclude name="log4j-1.2.8.jar"/>
				<exclude name="commons-logging*.*"/>
				<exclude name="spring-richclient.jar"/>
			</lib>
			<zipfileset dir="${dir.conf}" prefix="log">
				<include name="server.log"/>
				<include name="client.log"/>
				<include name="hibernate.log"/>
			</zipfileset>
			<webinf dir="${dir.conf}">
				<include name="server-config.wsdd"/>
				<include name="hibernate-configuration-3.0.dtd"/>
				<include name="hibernate-mapping-3.0.dtd"/>
				<include name="applicationContext.xml"/>
				<include name="httpinvoker-servlet.xml"/>
			</webinf>
			<classes dir="${dir.output.project.framework.build}">
				<exclude name="gov/nih/nci/system/comm/client/ApplicationServiceClientImpl.class"/>
				<exclude name="gov/nih/nci/system/comm/client/ClientSession.class"/>			
			</classes>
			<classes dir="${dir.output.project.build}">
				<exclude name="**/impl/test/*.class"/>
			</classes>
			<classes dir="${dir.output.project.orm}"/>
			<classes dir="${dir.output.project.conf}">
				<include name="${file.control.systemProperties}"/>
				<include name="roleLookup.properties"/>
				<include name="cacoreBeans.properties"/>
				<include name="evsBeans.properties"/>
				<include name="log4j.properties"/>
				<include name="applicationService.xml"/>
				<include name="orm2.cfg.xml"/>
				<include name="orm1.cfg.xml"/>
				<include name="${file.cache.properties}"/>
				<include name="${file.orm.properties}"/>
			</classes>
			<classes file="${dir.output.project.xmlmapping}/xml-mapping.xml" />
			<classes file="${dir.conf}/xml.properties"/>
			<classes file="${dir.output.project}/log4j.properties"/>
			<zipfileset dir="${dir.output.project.conf}" prefix="WEB-INF/conf">
				<include name="DAOConfig.xml"/>
				<!--

				<include name="log4j.properties"/>
				<include name="roleLookup.properties"/>
				<include name="cacoreBeans.properties"/>
				<include name="${file.cache.properties}"/>
				<include name="${file.orm.properties}"/>
				<include name="${file.orm.configuration}"/>
				<include name="${file.orm2.configuration}"/>

				-->
			</zipfileset>
			<zipfileset file="${dir.output.project}/log4j.properties" prefix="WEB-INF/conf"/>
			<fileset dir="${dir.conf}">
				<include name="Happy.jsp"/>
				<include name="Classes.jsp"/>
				<include name="Packages.jsp"/>
				<include name="Criteria.jsp"/>
				<include name="Result.jsp"/>
			</fileset>
		   	<fileset dir="${dir.conf.xslt}">
				<include name="**/**"/>
				<exclude name="*.xsl"/>
			</fileset>
			<zipfileset dir="${dir.custom.conf}/xslt/images" prefix="images">
				<include name="**/**"/>
			</zipfileset>
			<zipfileset dir="${dir.custom.conf}/wsdl" prefix="wsdl">
							<include name="server-config.wsdd"/>
			</zipfileset>
			<zipfileset dir="${dir.output.project.conf}" prefix="WEB-INF/classes/xslt">
				<include name="*.xsl"/>
			</zipfileset>
		</war>
	</target>
	<target name="-package-system.custom" if="package-system.custom.use"/>
	<target name="-rundemo.custom" if="rundemo.custom.use"/>
	<target name="-runtest.custom" if="runtest.custom.use"/>
	<target name="-runXMLdemo.custom" if="runXMLdemo.custom.use"/>
	<target name="-runWSdemo.custom" if="runWSdemo.custom.use"/>
	<target name="-undeployWS.custom" if="undeployWS.custom.use"/>
</project>